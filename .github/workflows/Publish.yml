name: Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Latest GList
        uses: actions/checkout@v3
        with:
          repository: cokebar/gfwlist2dnsmasq
          path: gfwlist2dnsmasq

      - name: Get Latest GList
        run: |
          cd gfwlist2dnsmasq || exit 1
          chmod +x ./gfwlist2dnsmasq.sh
          ./gfwlist2dnsmasq.sh -l -o ./temp-glist.txt

      - name: Set Latest GList
        run: |
          cat ./gfwlist2dnsmasq/temp-glist.txt | perl -ne '/^((?=^.{3,255})[a-zA-Z0-9][-_a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-_a-zA-Z0-9]{0,62})+)/ && print "$1\n"' >> ./data/g

      - name: Set Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Go mod
        run: go mod download

      - run: go run ./

      - name: Package
        id: package
        run: echo "filename=glist.dat" >> $GITHUB_OUTPUT

      - name: Get current date
        id: date
        run: echo "today=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get latest tag
        id: tag
        run: echo "latest=$(wget --no-check-certificate -qO- https://api.github.com/repos/yezige/glist/tags | grep 'name' | cut -d\" -f4 | head -1)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.today }}
          release_name: Release ${{ steps.date.outputs.today }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package.outputs.filename }}
          asset_name: ${{ steps.package.outputs.filename }}
          asset_content_type: application/octet-stream

      - name: Upload Google Drive
        id: upload_google_drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.credentials }}
          folderId: '1xd2RHRjvMbD1Sgm7YTLwVSZl4VVLL670'
          filename: ${{ steps.package.outputs.filename }}
          overwrite: true
